// ./proto/orders/order.proto

syntax = "proto3";

option go_package = "rpc/grpc/examples/protogen/golang/orders";

import "products/product.proto";
import "google/api/annotations.proto";
import "google/api/date.proto";

message Order {
uint64 order_id = 1 [ json_name = "order_id" ];
uint64 customer_id = 2 [ json_name = "customer_id" ];
bool is_active = 3 [ json_name = "is_active" ];
repeated Product products = 4;
google.type.Date order_date = 5 [ json_name = "order_date" ];
}

message Empty {}

message ResponseFormat {
bool is_success = 1 [ json_name = "isSuccess" ];
uint64 status = 2 [ json_name = "status" ];
uint64 order_id = 3 [ json_name = "order_id" ];

}

message PayloadWithSingleOrder {
Order order = 1;
}

message PayloadWithMultipelOrders {
    repeated Order orders = 1;
}

message PayloadWithOrderID {
uint64 order_id = 1;
}

service Orders {

rpc AddOrder(PayloadWithSingleOrder) returns (ResponseFormat) {
option(google.api.http)={
post:"/v0/orders/save",
body:"*"
};
}
rpc GetOrder(PayloadWithOrderID) returns (PayloadWithSingleOrder) {
option(google.api.http)={
get:"/v0/orders/{order_id}"
};
}

rpc GetAllOrders(Empty) returns (PayloadWithMultipelOrders){
option(google.api.http)={
get:"/v0/orders"
};
}
}